import { join, dirname } from 'path'
import { getReferences } from './props-utils.mjs'
import { kebabCase } from '@vtex/shoreline-utils'
import fse from 'fs-extra'
import { format } from 'prettier'

const outputDirectory = `${dirname('')}/__props__`
const outputFile = 'index.ts'

const files = [
  /**
   * Primitives
   */
  getPath('primitives', 'accessible-icon', 'accessible-icon'),
  getPath('primitives', 'clickable', 'clickable'),
  getPath('primitives', 'clickable', 'clickable-bubble'),
  getPath('primitives', 'combobox', 'combobox'),
  getPath('primitives', 'combobox', 'combobox-provider'),
  getPath('primitives', 'combobox', 'combobox-popover'),
  getPath('primitives', 'combobox', 'combobox-list'),
  getPath('primitives', 'combobox', 'combobox-item'),
  getPath('primitives', 'compose', 'compose'),
  getPath('primitives', 'compose', 'composable'),
  getPath('primitives', 'link-box', 'link-box'),
  getPath('primitives', 'locale', 'locale-provider'),
  getPath('primitives', 'select', 'select-trigger'),
  getPath('primitives', 'select', 'select-provider'),
  getPath('primitives', 'select', 'select-popover'),
  getPath('primitives', 'select', 'select-list'),
  getPath('primitives', 'select', 'select-item'),
  getPath('primitives', 'select', 'select-item-check'),
  getPath('primitives', 'visually-hidden', 'visually-hidden'),

  /**
   * Components
   */
  getPath('components', 'alert', 'alert'),
  getPath('components', 'bleed', 'bleed'),
  getPath('components', 'button', 'button'),
  getPath('components', 'center', 'center'),
  getPath('components', 'checkbox', 'checkbox'),
  getPath('components', 'checkbox', 'checkbox-group'),
]

let tsCode = `
// This file is autogenerated by scripts/build-props.mjs
// Do not edit this file directly.

export default {
`

async function main() {
  const refs = {}

  files.forEach((file) => {
    const ref = getReferences(file)[0]

    refs[kebabCase(ref.name)] = ref

    tsCode += `
      "${kebabCase(ref.name)}": ${JSON.stringify(ref)},
      `
  })

  tsCode += '}'

  const formattedTsCode = await format(tsCode, {
    parser: 'typescript',
    semi: false,
    singleQuote: true,
  })

  fse.outputFile(`${outputDirectory}/${outputFile}`, formattedTsCode, (err) => {
    if (err) {
      console.log(err)
    } else {
      console.log('âœ… Props documentation generated!')
    }
  })
}

function getPath(pkg, folder, file) {
  return join(dirname(''), `../${pkg}/src/${folder}/${file}.tsx`)
}

main()
