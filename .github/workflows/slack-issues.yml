name: Send Design Issues to Slack

on:
  schedule:
    - cron: '0 9 */14 * *'  # A cada 14 dias, √†s 09:00 UTC
  workflow_dispatch:  # Tamb√©m pode ser disparado manualmente

jobs:
  post-to-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest Design issues
        id: get_issues
        run: |
          RESPONSE=$(curl -s "https://api.github.com/repos/vtex/shoreline/issues?state=open&labels=design&sort=created&direction=desc&per_page=2")
          ISSUE1_TITLE=$(echo "$RESPONSE" | jq -r '.[0].title')
          ISSUE1_URL=$(echo "$RESPONSE" | jq -r '.[0].html_url')
          ISSUE2_TITLE=$(echo "$RESPONSE" | jq -r '.[1].title')
          ISSUE2_URL=$(echo "$RESPONSE" | jq -r '.[1].html_url')
          echo "ISSUE1_TITLE=$ISSUE1_TITLE" >> $GITHUB_ENV
          echo "ISSUE1_URL=$ISSUE1_URL" >> $GITHUB_ENV
          echo "ISSUE2_TITLE=$ISSUE2_TITLE" >> $GITHUB_ENV
          echo "ISSUE2_URL=$ISSUE2_URL" >> $GITHUB_ENV

      - name: Send message to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE="üîî *Issues de Design*\n\n\
          *√öltimas 2 issues criadas com a label \`design\`:*\n\
          1. <${{ env.ISSUE1_URL }}|${{ env.ISSUE1_TITLE }}>\n\
          2. <${{ env.ISSUE2_URL }}|${{ env.ISSUE2_TITLE }}>\n\n\
          ‚û°Ô∏è <https://github.com/vtex/shoreline/issues?q=is%3Aopen+label%3Adesign|Ver todas as issues abertas com label \`design\`>\n\
          ‚û°Ô∏è <https://github.com/vtex/shoreline/issues?q=is%3Aopen+label%3Adesign+label%3A%22good+first+issue%22|Ver issues com labels \`design\` e \`good first issue\`>"

          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" $SLACK_WEBHOOK_URL
